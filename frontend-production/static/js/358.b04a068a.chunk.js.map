{"version":3,"file":"static/js/358.b04a068a.chunk.js","mappings":"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","sources":["pages/AdminDashboard.js","services/api.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { apiService } from '../services/api';\n\nconst AdminDashboard = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [password, setPassword] = useState('');\n  const [showLogin, setShowLogin] = useState(true);\n  const [leads, setLeads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [selectedLead, setSelectedLead] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showDetailModal, setShowDetailModal] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [leadToDelete, setLeadToDelete] = useState(null);\n  const [stats, setStats] = useState({\n    total: 0,\n    new: 0,\n    contacted: 0,\n    converted: 0,\n    lost: 0\n  });\n\n  // Senha simples (em produção real, usar autenticação JWT)\n  const ADMIN_PASSWORD = 'santos2024admin';\n\n  const statusColors = {\n    new: 'bg-blue-100 text-blue-800',\n    contacted: 'bg-yellow-100 text-yellow-800',\n    converted: 'bg-green-100 text-green-800',\n    lost: 'bg-red-100 text-red-800'\n  };\n\n  const statusLabels = {\n    new: 'Novo',\n    contacted: 'Contatado',\n    converted: 'Convertido',\n    lost: 'Perdido'\n  };\n\n  const handleLogin = () => {\n    if (password === ADMIN_PASSWORD) {\n      setIsAuthenticated(true);\n      setShowLogin(false);\n      localStorage.setItem('santos_admin_auth', 'true');\n      toast.success('Login realizado com sucesso!');\n    } else {\n      toast.error('Senha incorreta!');\n      setPassword('');\n    }\n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    setShowLogin(true);\n    localStorage.removeItem('santos_admin_auth');\n    toast.success('Logout realizado com sucesso!');\n  };\n\n  // Verificar se já está autenticado\n  useEffect(() => {\n    const isAuth = localStorage.getItem('santos_admin_auth') === 'true';\n    if (isAuth) {\n      setIsAuthenticated(true);\n      setShowLogin(false);\n    }\n  }, []);\n\n  const fetchLeads = useCallback(async () => {\n    if (!isAuthenticated) return;\n    \n    try {\n      setLoading(true);\n      console.log('Buscando leads com filtro:', filter);\n      \n      const response = await apiService.getLeads(filter === 'all' ? null : filter);\n      console.log('Resposta da API:', response);\n      \n      const leadsData = response.leads || [];\n      setLeads(leadsData);\n      \n      // Calcular estatísticas baseado em TODOS os leads\n      const allLeadsResponse = await apiService.getLeads(null); // Buscar todos\n      const allLeads = allLeadsResponse.leads || [];\n      \n      const newStats = {\n        total: allLeads.length,\n        new: 0,\n        contacted: 0,\n        converted: 0,\n        lost: 0\n      };\n      \n      allLeads.forEach(lead => {\n        if (newStats.hasOwnProperty(lead.status)) {\n          newStats[lead.status]++;\n        }\n      });\n      \n      console.log('Estatísticas calculadas:', newStats);\n      setStats(newStats);\n      \n    } catch (error) {\n      console.error('Erro ao buscar leads:', error);\n      toast.error('Erro ao carregar leads: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [filter, isAuthenticated]);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchLeads();\n      // Remover auto-refresh - atualizar apenas manualmente ou quando há novos leads\n    }\n  }, [fetchLeads, isAuthenticated]);\n\n  const updateLeadStatus = async (leadId, newStatus, notes = '') => {\n    try {\n      await apiService.updateLead(leadId, { status: newStatus, notes });\n      toast.success('Status atualizado com sucesso!');\n      fetchLeads(); // Refresh da lista\n      setShowModal(false);\n    } catch (error) {\n      console.error('Erro ao atualizar lead:', error);\n      toast.error('Erro ao atualizar status: ' + error.message);\n    }\n  };\n\n  const deleteLead = async (leadId) => {\n    try {\n      await apiService.deleteLead(leadId);\n      toast.success('Lead excluído com sucesso!');\n      fetchLeads(); // Refresh da lista\n      setShowDeleteConfirm(false);\n      setLeadToDelete(null);\n    } catch (error) {\n      console.error('Erro ao excluir lead:', error);\n      toast.error('Erro ao excluir lead: ' + error.message);\n    }\n  };\n\n  const cleanupDemoLeads = async () => {\n    try {\n      const result = await apiService.cleanupDemoLeads();\n      toast.success(`${result.deleted_count || 0} leads demo removidos!`);\n      fetchLeads(); // Refresh da lista\n    } catch (error) {\n      console.error('Erro ao limpar leads demo:', error);\n      toast.error('Erro ao limpar leads demo: ' + error.message);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleString('pt-BR');\n  };\n\n  const formatFullDate = (dateString) => {\n    if (!dateString) return 'N/A';\n    const date = new Date(dateString);\n    return date.toLocaleString('pt-BR', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getTimeAgo = (dateString) => {\n    if (!dateString) return '';\n    const diff = Date.now() - new Date(dateString).getTime();\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor(diff / (1000 * 60));\n    \n    if (days > 0) return `${days}d atrás`;\n    if (hours > 0) return `${hours}h atrás`;\n    if (minutes > 0) return `${minutes}min atrás`;\n    return 'Agora mesmo';\n  };\n\n  // Tela de Login\n  if (showLogin) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-blue-800 to-indigo-900 flex items-center justify-center p-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-white rounded-2xl shadow-2xl p-8 w-full max-w-md\"\n        >\n          <div className=\"text-center mb-8\">\n            <div className=\"mx-auto w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4\">\n              <i className=\"fas fa-shield-alt text-2xl text-blue-600\"></i>\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Admin Dashboard\n            </h1>\n            <p className=\"text-gray-600\">\n              Santos Cleaning Solutions\n            </p>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Senha de Acesso\n              </label>\n              <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleLogin()}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Digite a senha do administrador\"\n                autoFocus\n              />\n            </div>\n\n            <button\n              onClick={handleLogin}\n              disabled={!password}\n              className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors\"\n            >\n              <i className=\"fas fa-sign-in-alt mr-2\"></i>\n              Entrar\n            </button>\n          </div>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-xs text-gray-500\">\n              Acesso restrito apenas para administradores\n            </p>\n          </div>\n        </motion.div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8 flex justify-between items-start\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n              Dashboard de Leads\n            </h1>\n            <p className=\"text-gray-600\">\n              Gerencie e acompanhe seus leads do formulário de contato\n            </p>\n          </div>\n          \n          <button\n            onClick={handleLogout}\n            className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 flex items-center\"\n          >\n            <i className=\"fas fa-sign-out-alt mr-2\"></i>\n            Sair\n          </button>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-8\">\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <i className=\"fas fa-users text-blue-600\"></i>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Total</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <i className=\"fas fa-star text-blue-600\"></i>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Novos</p>\n                <p className=\"text-2xl font-bold text-blue-600\">{stats.new}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg\">\n                <i className=\"fas fa-phone text-yellow-600\"></i>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Contatados</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.contacted}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <i className=\"fas fa-check-circle text-green-600\"></i>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Convertidos</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.converted}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-red-100 rounded-lg\">\n                <i className=\"fas fa-times-circle text-red-600\"></i>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">Perdidos</p>\n                <p className=\"text-2xl font-bold text-red-600\">{stats.lost}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\n          <div className=\"flex flex-wrap gap-2 items-center\">\n            <button\n              onClick={() => setFilter('all')}\n              className={`px-4 py-2 rounded-lg font-medium ${\n                filter === 'all'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              Todos ({stats.total})\n            </button>\n            {Object.entries(statusLabels).map(([status, label]) => (\n              <button\n                key={status}\n                onClick={() => setFilter(status)}\n                className={`px-4 py-2 rounded-lg font-medium ${\n                  filter === status\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                }`}\n              >\n                {label} ({stats[status] || 0})\n              </button>\n            ))}\n            \n            <div className=\"ml-auto flex gap-2\">\n              <button\n                onClick={cleanupDemoLeads}\n                className=\"px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 flex items-center\"\n              >\n                <i className=\"fas fa-broom mr-2\"></i>\n                Limpar Demos\n              </button>\n              <button\n                onClick={fetchLeads}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center\"\n              >\n                <i className=\"fas fa-sync-alt mr-2\"></i>\n                Atualizar\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Leads Table */}\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          {loading ? (\n            <div className=\"p-8 text-center\">\n              <i className=\"fas fa-spinner fa-spin text-2xl text-gray-400 mb-4\"></i>\n              <p className=\"text-gray-600\">Carregando leads...</p>\n            </div>\n          ) : leads.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <i className=\"fas fa-inbox text-4xl text-gray-400 mb-4\"></i>\n              <p className=\"text-gray-600\">\n                {filter === 'all' ? 'Nenhum lead encontrado' : `Nenhum lead com status \"${statusLabels[filter] || filter}\"`}\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Cliente\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Contato\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Status\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Fonte\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Data\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Ações\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {leads.map((lead) => (\n                    <motion.tr\n                      key={lead.id}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"hover:bg-gray-50\"\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">\n                            {lead.name}\n                          </div>\n                          <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                            {lead.message || 'Sem mensagem'}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">{lead.phone}</div>\n                        <div className=\"text-sm text-gray-500\">{lead.email}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <span\n                          className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\n                            statusColors[lead.status] || 'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {statusLabels[lead.status] || lead.status}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                        {lead.source}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-sm text-gray-900\">\n                          {formatDate(lead.created_at)}\n                        </div>\n                        <div className=\"text-xs text-gray-500\">\n                          {getTimeAgo(lead.created_at)}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => {\n                              setSelectedLead(lead);\n                              setShowDetailModal(true);\n                            }}\n                            className=\"text-blue-600 hover:text-blue-900\"\n                            title=\"Ver detalhes\"\n                          >\n                            <i className=\"fas fa-eye\"></i>\n                          </button>\n                          <button\n                            onClick={() => {\n                              setSelectedLead(lead);\n                              setShowModal(true);\n                            }}\n                            className=\"text-purple-600 hover:text-purple-900\"\n                            title=\"Editar status\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </button>\n                          <a\n                            href={`tel:${lead.phone}`}\n                            className=\"text-green-600 hover:text-green-900\"\n                            title=\"Ligar\"\n                          >\n                            <i className=\"fas fa-phone\"></i>\n                          </a>\n                          <a\n                            href={`mailto:${lead.email}`}\n                            className=\"text-indigo-600 hover:text-indigo-900\"\n                            title=\"Enviar email\"\n                          >\n                            <i className=\"fas fa-envelope\"></i>\n                          </a>\n                          <button\n                            onClick={() => {\n                              setLeadToDelete(lead);\n                              setShowDeleteConfirm(true);\n                            }}\n                            className=\"text-red-600 hover:text-red-900\"\n                            title=\"Excluir\"\n                          >\n                            <i className=\"fas fa-trash\"></i>\n                          </button>\n                        </div>\n                      </td>\n                    </motion.tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n\n        {/* Modal de Edição */}\n        {showModal && selectedLead && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <h3 className=\"text-lg font-bold mb-4\">Atualizar Lead</h3>\n              \n              <div className=\"mb-4\">\n                <p className=\"font-medium\">{selectedLead.name}</p>\n                <p className=\"text-sm text-gray-600\">{selectedLead.email}</p>\n              </div>\n\n              <div className=\"space-y-3\">\n                <button\n                  onClick={() => updateLeadStatus(selectedLead.id, 'contacted')}\n                  className=\"w-full p-3 bg-yellow-100 text-yellow-800 rounded-lg hover:bg-yellow-200 flex items-center\"\n                >\n                  <i className=\"fas fa-phone mr-3\"></i>\n                  Marcar como Contatado\n                </button>\n                \n                <button\n                  onClick={() => updateLeadStatus(selectedLead.id, 'converted')}\n                  className=\"w-full p-3 bg-green-100 text-green-800 rounded-lg hover:bg-green-200 flex items-center\"\n                >\n                  <i className=\"fas fa-check-circle mr-3\"></i>\n                  Marcar como Convertido\n                </button>\n                \n                <button\n                  onClick={() => updateLeadStatus(selectedLead.id, 'lost')}\n                  className=\"w-full p-3 bg-red-100 text-red-800 rounded-lg hover:bg-red-200 flex items-center\"\n                >\n                  <i className=\"fas fa-times-circle mr-3\"></i>\n                  Marcar como Perdido\n                </button>\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button\n                  onClick={() => setShowModal(false)}\n                  className=\"flex-1 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\n                >\n                  Cancelar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de Detalhes Completos */}\n        {showDetailModal && selectedLead && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-lg w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-start mb-6\">\n                  <h3 className=\"text-xl font-bold text-gray-900\">Detalhes do Lead</h3>\n                  <button\n                    onClick={() => setShowDetailModal(false)}\n                    className=\"text-gray-400 hover:text-gray-600\"\n                  >\n                    <i className=\"fas fa-times text-xl\"></i>\n                  </button>\n                </div>\n\n                <div className=\"space-y-6\">\n                  {/* Informações Básicas */}\n                  <div className=\"bg-gray-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center\">\n                      <i className=\"fas fa-user mr-2 text-blue-600\"></i>\n                      Informações Pessoais\n                    </h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Nome</label>\n                        <p className=\"text-gray-900 font-medium\">{selectedLead.name}</p>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Email</label>\n                        <p className=\"text-gray-900\">{selectedLead.email}</p>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Telefone</label>\n                        <p className=\"text-gray-900\">{selectedLead.phone}</p>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Idioma</label>\n                        <p className=\"text-gray-900\">{selectedLead.language || 'N/A'}</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Mensagem */}\n                  {selectedLead.message && (\n                    <div className=\"bg-blue-50 p-4 rounded-lg\">\n                      <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center\">\n                        <i className=\"fas fa-comment mr-2 text-blue-600\"></i>\n                        Mensagem do Cliente\n                      </h4>\n                      <div className=\"bg-white p-4 rounded border border-blue-200\">\n                        <p className=\"text-gray-900 whitespace-pre-wrap\">{selectedLead.message}</p>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Status e Tracking */}\n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center\">\n                      <i className=\"fas fa-chart-line mr-2 text-green-600\"></i>\n                      Status e Acompanhamento\n                    </h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Status Atual</label>\n                        <span\n                          className={`inline-flex px-3 py-1 text-sm font-semibold rounded-full ${\n                            statusColors[selectedLead.status] || 'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {statusLabels[selectedLead.status] || selectedLead.status}\n                        </span>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Fonte</label>\n                        <p className=\"text-gray-900\">{selectedLead.source}</p>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Consentimento SMS</label>\n                        <p className=\"text-gray-900\">\n                          {selectedLead.sms_consent ? \n                            <span className=\"text-green-600\">✅ Sim</span> : \n                            <span className=\"text-red-600\">❌ Não</span>\n                          }\n                        </p>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Responsável</label>\n                        <p className=\"text-gray-900\">{selectedLead.assigned_to || 'Não atribuído'}</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Datas */}\n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center\">\n                      <i className=\"fas fa-calendar mr-2 text-purple-600\"></i>\n                      Histórico de Datas\n                    </h4>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-600\">Data de Criação</label>\n                        <p className=\"text-gray-900\">{formatFullDate(selectedLead.created_at)}</p>\n                      </div>\n                      {selectedLead.contacted_at && (\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-600\">Data do Contato</label>\n                          <p className=\"text-gray-900\">{formatFullDate(selectedLead.contacted_at)}</p>\n                        </div>\n                      )}\n                      {selectedLead.converted_at && (\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-600\">Data da Conversão</label>\n                          <p className=\"text-gray-900\">{formatFullDate(selectedLead.converted_at)}</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Notas */}\n                  {selectedLead.notes && (\n                    <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                      <h4 className=\"font-semibold text-gray-800 mb-3 flex items-center\">\n                        <i className=\"fas fa-sticky-note mr-2 text-yellow-600\"></i>\n                        Notas\n                      </h4>\n                      <div className=\"bg-white p-4 rounded border border-yellow-200\">\n                        <p className=\"text-gray-900 whitespace-pre-wrap\">{selectedLead.notes}</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                {/* Ações do Modal */}\n                <div className=\"flex gap-3 mt-8 pt-6 border-t\">\n                  <button\n                    onClick={() => {\n                      setShowDetailModal(false);\n                      setShowModal(true);\n                    }}\n                    className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 flex items-center justify-center\"\n                  >\n                    <i className=\"fas fa-edit mr-2\"></i>\n                    Editar Status\n                  </button>\n                  <a\n                    href={`tel:${selectedLead.phone}`}\n                    className=\"flex-1 bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 flex items-center justify-center text-decoration-none\"\n                  >\n                    <i className=\"fas fa-phone mr-2\"></i>\n                    Ligar\n                  </a>\n                  <a\n                    href={`mailto:${selectedLead.email}`}\n                    className=\"flex-1 bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 flex items-center justify-center text-decoration-none\"\n                  >\n                    <i className=\"fas fa-envelope mr-2\"></i>\n                    Email\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de Confirmação de Exclusão */}\n        {showDeleteConfirm && leadToDelete && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n              <div className=\"text-center mb-6\">\n                <i className=\"fas fa-trash text-4xl text-red-500 mb-4\"></i>\n                <h3 className=\"text-lg font-bold text-gray-900 mb-2\">Confirmar Exclusão</h3>\n                <p className=\"text-gray-600\">\n                  Tem certeza que deseja excluir o lead de <strong>{leadToDelete.name}</strong>?\n                </p>\n                <p className=\"text-sm text-red-600 mt-2\">Esta ação não pode ser desfeita!</p>\n              </div>\n\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={() => {\n                    setShowDeleteConfirm(false);\n                    setLeadToDelete(null);\n                  }}\n                  className=\"flex-1 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300\"\n                >\n                  Cancelar\n                </button>\n                <button\n                  onClick={() => deleteLead(leadToDelete.id)}\n                  className=\"flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n                >\n                  Excluir\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;","import axios from 'axios';\n\n// Em produção, usar URL relativa (mesmo domínio)\n// Em desenvolvimento, usar localhost\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? '' // URL relativa em produção\n  : (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001');\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging (only in development)\nif (process.env.NODE_ENV === 'development') {\n  api.interceptors.request.use(\n    (config) => {\n      console.log('API Request:', config.method?.toUpperCase(), config.url);\n      return config;\n    },\n    (error) => {\n      console.error('API Request Error:', error);\n      return Promise.reject(error);\n    }\n  );\n}\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('API Response:', response.status, response.config.url);\n    }\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.status, error.config?.url, error.message);\n    \n    // Handle common errors\n    if (error.response?.status === 404) {\n      console.error('API endpoint not found');\n    } else if (error.response?.status >= 500) {\n      console.error('Server error');\n    } else if (error.code === 'ECONNABORTED') {\n      console.error('Request timeout');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API functions\nexport const apiService = {\n  // Health check\n  async healthCheck() {\n    try {\n      const response = await api.get('/api/health');\n      return response.data;\n    } catch (error) {\n      console.error('Health check failed:', error);\n      throw error;\n    }\n  },\n\n  // Contact form submission\n  async submitContact(contactData) {\n    try {\n      const response = await api.post('/api/contact', contactData);\n      return response.data;\n    } catch (error) {\n      console.error('Contact submission failed:', error);\n      throw error;\n    }\n  },\n\n  // Get reviews\n  async getReviews() {\n    try {\n      const response = await api.get('/api/reviews');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch reviews:', error);\n      // Return empty reviews on error - NO MORE FAKE REVIEWS\n      return {\n        reviews: []\n      };\n    }\n  },\n\n  // Get services\n  async getServices() {\n    try {\n      const response = await api.get('/api/services');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch services:', error);\n      throw error;\n    }\n  },\n\n  // Create booking\n  async createBooking(bookingData) {\n    try {\n      const response = await api.post('/api/bookings', bookingData);\n      return response.data;\n    } catch (error) {\n      console.error('Booking creation failed:', error);\n      throw error;\n    }\n  },\n\n  // Add review\n  async addReview(reviewData) {\n    try {\n      const response = await api.post('/api/reviews', reviewData);\n      return response.data;\n    } catch (error) {\n      console.error('Review submission failed:', error);\n      throw error;\n    }\n  },\n\n  // Lead management\n  async getLeads(status = null, limit = 50, offset = 0) {\n    try {\n      let url = `/api/leads?limit=${limit}&offset=${offset}`;\n      if (status) {\n        url += `&status=${status}`;\n      }\n      const response = await api.get(url);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching leads:', error);\n      throw error;\n    }\n  },\n\n  async updateLead(leadId, updates) {\n    try {\n      const response = await api.put(`/api/leads/${leadId}`, updates);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating lead:', error);\n      throw error;\n    }\n  },\n\n  async deleteLead(leadId) {\n    try {\n      const response = await api.delete(`/api/leads/${leadId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting lead:', error);\n      throw error;\n    }\n  },\n\n  async cleanupDemoLeads() {\n    try {\n      const response = await api.delete('/api/leads/cleanup/demo');\n      return response.data;\n    } catch (error) {\n      console.error('Error cleaning up demo leads:', error);\n      throw error;\n    }\n  }\n};\n\nexport default api;"],"names":["AdminDashboard","isAuthenticated","setIsAuthenticated","useState","password","setPassword","showLogin","setShowLogin","leads","setLeads","loading","setLoading","filter","setFilter","selectedLead","setSelectedLead","showModal","setShowModal","showDetailModal","setShowDetailModal","showDeleteConfirm","setShowDeleteConfirm","leadToDelete","setLeadToDelete","stats","setStats","total","new","contacted","converted","lost","statusColors","statusLabels","handleLogin","localStorage","setItem","toast","success","error","useEffect","getItem","fetchLeads","useCallback","async","console","log","response","apiService","getLeads","leadsData","allLeads","newStats","length","forEach","lead","hasOwnProperty","status","message","updateLeadStatus","leadId","newStatus","notes","arguments","undefined","updateLead","formatFullDate","dateString","Date","toLocaleString","weekday","year","month","day","hour","minute","getTimeAgo","diff","now","getTime","days","Math","floor","hours","minutes","_jsx","className","children","_jsxs","motion","div","initial","opacity","y","animate","type","value","onChange","e","target","onKeyPress","key","placeholder","autoFocus","onClick","disabled","handleLogout","removeItem","Object","entries","map","_ref","label","result","cleanupDemoLeads","deleted_count","tr","name","phone","email","source","created_at","title","href","id","language","sms_consent","assigned_to","contacted_at","converted_at","deleteLead","api","axios","create","baseURL","timeout","headers","interceptors","use","_error$response","_error$config","_error$response2","_error$response3","config","url","code","Promise","reject","healthCheck","get","data","submitContact","contactData","post","getReviews","reviews","getServices","createBooking","bookingData","addReview","reviewData","limit","offset","updates","put","delete"],"sourceRoot":""}