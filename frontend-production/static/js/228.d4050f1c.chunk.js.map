{"version":3,"file":"static/js/228.d4050f1c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","schedule","frame","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","addToCurrentFrame","arguments","undefined","queue","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","warning","invariant","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref10","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","useLayoutEffect","any"],"sourceRoot":""}