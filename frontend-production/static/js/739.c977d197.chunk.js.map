{"version":3,"file":"static/js/739.c977d197.chunk.js","mappings":"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","sources":["services/api.js","pages/BookingPage.js"],"sourcesContent":["import axios from 'axios';\n\n// Em produção, usar URL relativa (mesmo domínio)\n// Em desenvolvimento, usar localhost\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? '' // URL relativa em produção\n  : (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001');\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging (only in development)\nif (process.env.NODE_ENV === 'development') {\n  api.interceptors.request.use(\n    (config) => {\n      console.log('API Request:', config.method?.toUpperCase(), config.url);\n      return config;\n    },\n    (error) => {\n      console.error('API Request Error:', error);\n      return Promise.reject(error);\n    }\n  );\n}\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('API Response:', response.status, response.config.url);\n    }\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.status, error.config?.url, error.message);\n    \n    // Handle common errors\n    if (error.response?.status === 404) {\n      console.error('API endpoint not found');\n    } else if (error.response?.status >= 500) {\n      console.error('Server error');\n    } else if (error.code === 'ECONNABORTED') {\n      console.error('Request timeout');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API functions\nexport const apiService = {\n  // Health check\n  async healthCheck() {\n    try {\n      const response = await api.get('/api/health');\n      return response.data;\n    } catch (error) {\n      console.error('Health check failed:', error);\n      throw error;\n    }\n  },\n\n  // Contact form submission\n  async submitContact(contactData) {\n    try {\n      const response = await api.post('/api/contact', contactData);\n      return response.data;\n    } catch (error) {\n      console.error('Contact submission failed:', error);\n      throw error;\n    }\n  },\n\n  // Get reviews\n  async getReviews() {\n    try {\n      const response = await api.get('/api/reviews');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch reviews:', error);\n      // Return empty reviews on error - NO MORE FAKE REVIEWS\n      return {\n        reviews: []\n      };\n    }\n  },\n\n  // Get services\n  async getServices() {\n    try {\n      const response = await api.get('/api/services');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch services:', error);\n      throw error;\n    }\n  },\n\n  // Create booking\n  async createBooking(bookingData) {\n    try {\n      const response = await api.post('/api/bookings', bookingData);\n      return response.data;\n    } catch (error) {\n      console.error('Booking creation failed:', error);\n      throw error;\n    }\n  },\n\n  // Add review\n  async addReview(reviewData) {\n    try {\n      const response = await api.post('/api/reviews', reviewData);\n      return response.data;\n    } catch (error) {\n      console.error('Review submission failed:', error);\n      throw error;\n    }\n  },\n\n  // Lead management\n  async getLeads(status = null, limit = 50, offset = 0) {\n    try {\n      let url = `/api/leads?limit=${limit}&offset=${offset}`;\n      if (status) {\n        url += `&status=${status}`;\n      }\n      const response = await api.get(url);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching leads:', error);\n      throw error;\n    }\n  },\n\n  async updateLead(leadId, updates) {\n    try {\n      const response = await api.put(`/api/leads/${leadId}`, updates);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating lead:', error);\n      throw error;\n    }\n  },\n\n  async deleteLead(leadId) {\n    try {\n      const response = await api.delete(`/api/leads/${leadId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting lead:', error);\n      throw error;\n    }\n  },\n\n  async cleanupDemoLeads() {\n    try {\n      const response = await api.delete('/api/leads/cleanup/demo');\n      return response.data;\n    } catch (error) {\n      console.error('Error cleaning up demo leads:', error);\n      throw error;\n    }\n  }\n};\n\nexport default api;","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { apiService } from '../services/api';\nimport { useTranslations } from '../utils/translations';\nimport { DEFAULT_SERVICES, VALIDATION_PATTERNS, ERROR_MESSAGES } from '../utils/constants';\n\nconst BookingPage = () => {\n  const navigate = useNavigate();\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const { t } = useTranslations(currentLanguage);\n  const [services, setServices] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    customer_name: '',\n    email: '',\n    phone: '',\n    service_type: '',\n    preferred_date: '',\n    preferred_time: '',\n    address: '',\n    special_instructions: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    // Load services\n    const loadServices = async () => {\n      try {\n        const data = await apiService.getServices();\n        setServices(data.services || DEFAULT_SERVICES);\n      } catch (error) {\n        setServices(DEFAULT_SERVICES);\n      }\n    };\n\n    loadServices();\n  }, []);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.customer_name.trim()) {\n      newErrors.customer_name = ERROR_MESSAGES.required;\n    } else if (!VALIDATION_PATTERNS.name.test(formData.customer_name)) {\n      newErrors.customer_name = ERROR_MESSAGES.name;\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = ERROR_MESSAGES.required;\n    } else if (!VALIDATION_PATTERNS.email.test(formData.email)) {\n      newErrors.email = ERROR_MESSAGES.email;\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = ERROR_MESSAGES.required;\n    } else if (!VALIDATION_PATTERNS.phone.test(formData.phone.replace(/\\D/g, ''))) {\n      newErrors.phone = ERROR_MESSAGES.phone;\n    }\n\n    if (!formData.service_type) {\n      newErrors.service_type = ERROR_MESSAGES.required;\n    }\n\n    if (!formData.preferred_date) {\n      newErrors.preferred_date = ERROR_MESSAGES.required;\n    }\n\n    if (!formData.preferred_time) {\n      newErrors.preferred_time = ERROR_MESSAGES.required;\n    }\n\n    if (!formData.address.trim()) {\n      newErrors.address = ERROR_MESSAGES.required;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      toast.error('Please correct the errors in the form');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const response = await apiService.createBooking(formData);\n      \n      if (response.success) {\n        setIsSubmitted(true);\n        toast.success('Booking request submitted successfully! We will contact you soon.');\n        \n        // Track booking conversion\n        if (window.gtag) {\n          window.gtag('event', 'booking_request', {\n            'service_type': formData.service_type,\n            'language': currentLanguage\n          });\n        }\n        \n        // Reset form\n        setFormData({\n          customer_name: '',\n          email: '',\n          phone: '',\n          service_type: '',\n          preferred_date: '',\n          preferred_time: '',\n          address: '',\n          special_instructions: ''\n        });\n        \n        // Auto redirect after 8 seconds\n        setTimeout(() => {\n          navigate('/');\n        }, 8000);\n      }\n    } catch (error) {\n      console.error('Booking error:', error);\n      toast.error('Failed to submit booking. Please try again or call us directly.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Format phone number\n    if (name === 'phone') {\n      const cleaned = value.replace(/\\D/g, '');\n      let formatted = cleaned;\n      if (cleaned.length >= 6) {\n        formatted = cleaned.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n      } else if (cleaned.length >= 3) {\n        formatted = cleaned.replace(/(\\d{3})(\\d{3})/, '($1) $2-');\n      }\n      setFormData(prev => ({ ...prev, [name]: formatted }));\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n    }\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const selectedService = services.find(s => s.id === formData.service_type || s.name === formData.service_type);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        currentLanguage={currentLanguage}\n        onLanguageChange={setCurrentLanguage}\n      />\n      \n      <main className=\"pt-20\">\n        <div className=\"container mx-auto px-4 py-16\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.7 }}\n            className=\"max-w-4xl mx-auto\"\n          >\n            <div className=\"text-center mb-12\">\n              <h1 className=\"text-4xl md:text-5xl font-bold text-gray-800 mb-4\">\n                Book Your Cleaning Service\n              </h1>\n              <p className=\"text-xl text-gray-600\">\n                Schedule your professional cleaning service today\n              </p>\n            </div>\n\n            <div className=\"grid lg:grid-cols-3 gap-8\">\n              {/* Booking Form */}\n              <div className=\"lg:col-span-2\">\n                <div className=\"bg-white rounded-2xl shadow-lg p-8\">\n                  <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">\n                    Service Details\n                  </h2>\n\n                  <form onSubmit={handleSubmit} className=\"space-y-6\">\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"form-label\">\n                          Full Name *\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"customer_name\"\n                          value={formData.customer_name}\n                          onChange={handleInputChange}\n                          className={`form-input ${errors.customer_name ? 'border-red-500' : ''}`}\n                          placeholder=\"Enter your full name\"\n                        />\n                        {errors.customer_name && (\n                          <p className=\"text-red-500 text-sm mt-1\">{errors.customer_name}</p>\n                        )}\n                      </div>\n\n                      <div>\n                        <label className=\"form-label\">\n                          Phone Number *\n                        </label>\n                        <input\n                          type=\"tel\"\n                          name=\"phone\"\n                          value={formData.phone}\n                          onChange={handleInputChange}\n                          className={`form-input ${errors.phone ? 'border-red-500' : ''}`}\n                          placeholder=\"(XXX) XXX-XXXX\"\n                        />\n                        {errors.phone && (\n                          <p className=\"text-red-500 text-sm mt-1\">{errors.phone}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"form-label\">\n                        Email Address *\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleInputChange}\n                        className={`form-input ${errors.email ? 'border-red-500' : ''}`}\n                        placeholder=\"your@email.com\"\n                      />\n                      {errors.email && (\n                        <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"form-label\">\n                        Service Type *\n                      </label>\n                      <select\n                        name=\"service_type\"\n                        value={formData.service_type}\n                        onChange={handleInputChange}\n                        className={`form-input ${errors.service_type ? 'border-red-500' : ''}`}\n                      >\n                        <option value=\"\">Select a service</option>\n                        {services.map(service => (\n                          <option key={service.id || service.name} value={service.id || service.name}>\n                            {service.name} - ${service.base_price || service.basePrice}\n                          </option>\n                        ))}\n                      </select>\n                      {errors.service_type && (\n                        <p className=\"text-red-500 text-sm mt-1\">{errors.service_type}</p>\n                      )}\n                    </div>\n\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div>\n                        <label className=\"form-label\">\n                          Preferred Date *\n                        </label>\n                        <input\n                          type=\"date\"\n                          name=\"preferred_date\"\n                          value={formData.preferred_date}\n                          onChange={handleInputChange}\n                          min={new Date().toISOString().split('T')[0]}\n                          className={`form-input ${errors.preferred_date ? 'border-red-500' : ''}`}\n                        />\n                        {errors.preferred_date && (\n                          <p className=\"text-red-500 text-sm mt-1\">{errors.preferred_date}</p>\n                        )}\n                      </div>\n\n                      <div>\n                        <label className=\"form-label\">\n                          Preferred Time *\n                        </label>\n                        <select\n                          name=\"preferred_time\"\n                          value={formData.preferred_time}\n                          onChange={handleInputChange}\n                          className={`form-input ${errors.preferred_time ? 'border-red-500' : ''}`}\n                        >\n                          <option value=\"\">Select time</option>\n                          <option value=\"8:00 AM\">8:00 AM</option>\n                          <option value=\"9:00 AM\">9:00 AM</option>\n                          <option value=\"10:00 AM\">10:00 AM</option>\n                          <option value=\"11:00 AM\">11:00 AM</option>\n                          <option value=\"12:00 PM\">12:00 PM</option>\n                          <option value=\"1:00 PM\">1:00 PM</option>\n                          <option value=\"2:00 PM\">2:00 PM</option>\n                          <option value=\"3:00 PM\">3:00 PM</option>\n                          <option value=\"4:00 PM\">4:00 PM</option>\n                        </select>\n                        {errors.preferred_time && (\n                          <p className=\"text-red-500 text-sm mt-1\">{errors.preferred_time}</p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"form-label\">\n                        Service Address *\n                      </label>\n                      <textarea\n                        name=\"address\"\n                        value={formData.address}\n                        onChange={handleInputChange}\n                        rows=\"3\"\n                        className={`form-input form-textarea ${errors.address ? 'border-red-500' : ''}`}\n                        placeholder=\"Enter your full address including city, state, and zip code\"\n                      />\n                      {errors.address && (\n                        <p className=\"text-red-500 text-sm mt-1\">{errors.address}</p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"form-label\">\n                        Special Instructions (Optional)\n                      </label>\n                      <textarea\n                        name=\"special_instructions\"\n                        value={formData.special_instructions}\n                        onChange={handleInputChange}\n                        rows=\"4\"\n                        className=\"form-input form-textarea\"\n                        placeholder=\"Any special instructions, areas of focus, or additional information...\"\n                      />\n                    </div>\n\n                    <button\n                      type=\"submit\"\n                      disabled={isLoading || isSubmitted}\n                      className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white px-8 py-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      {isLoading ? (\n                        <span className=\"flex items-center justify-center\">\n                          <div className=\"loading-spinner mr-2\"></div>\n                          Processing...\n                        </span>\n                      ) : isSubmitted ? (\n                        <span className=\"flex items-center justify-center\">\n                          <i className=\"fas fa-check-circle mr-2\"></i>\n                          Booking Submitted Successfully!\n                        </span>\n                      ) : (\n                        <span className=\"flex items-center justify-center\">\n                          <i className=\"fas fa-calendar-check mr-2\"></i>\n                          Book Service\n                        </span>\n                      )}\n                    </button>\n                    \n                    {isSubmitted && (\n                      <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n                        <div className=\"flex items-center mb-3\">\n                          <i className=\"fas fa-check-circle text-green-600 mr-2\"></i>\n                          <span className=\"text-green-800 font-semibold\">Booking Submitted Successfully!</span>\n                        </div>\n                        <p className=\"text-green-700 text-sm mb-4\">\n                          Thank you for your booking request. We will contact you within 24 hours to confirm your appointment.\n                        </p>\n                        <button\n                          onClick={() => navigate('/')}\n                          className=\"w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-6 py-3 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105\"\n                        >\n                          <i className=\"fas fa-home mr-2\"></i>\n                          Back to Home\n                        </button>\n                      </div>\n                    )}\n                  </form>\n                </div>\n              </div>\n\n              {/* Booking Summary */}\n              <div className=\"space-y-6\">\n                {selectedService && (\n                  <motion.div\n                    initial={{ opacity: 0, x: 20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    className=\"bg-white rounded-2xl shadow-lg p-6\"\n                  >\n                    <h3 className=\"text-xl font-bold text-gray-800 mb-4\">\n                      Service Summary\n                    </h3>\n                    \n                    <div className=\"space-y-4\">\n                      <div>\n                        <h4 className=\"font-semibold text-gray-800\">{selectedService.name}</h4>\n                        <p className=\"text-gray-600 text-sm\">{selectedService.description}</p>\n                      </div>\n                      \n                      <div className=\"border-t pt-4\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-gray-600\">Base Price:</span>\n                          <span className=\"font-semibold\">${selectedService.base_price || selectedService.basePrice}</span>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-gray-600\">Duration:</span>\n                          <span className=\"font-semibold\">{selectedService.duration_hours || selectedService.duration} hours</span>\n                        </div>\n                      </div>\n                      \n                      {(selectedService.includes || []).length > 0 && (\n                        <div className=\"border-t pt-4\">\n                          <h5 className=\"font-semibold text-gray-800 mb-2\">Includes:</h5>\n                          <ul className=\"space-y-1\">\n                            {selectedService.includes.map((item, index) => (\n                              <li key={index} className=\"text-sm text-gray-600 flex items-center\">\n                                <i className=\"fas fa-check text-green-500 mr-2\"></i>\n                                {item}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    </div>\n                  </motion.div>\n                )}\n\n                <div className=\"bg-blue-50 rounded-2xl p-6\">\n                  <h3 className=\"text-lg font-bold text-blue-800 mb-4\">\n                    Need Help?\n                  </h3>\n                  <div className=\"space-y-3\">\n                    <a\n                      href=\"tel:+18663509407\"\n                      className=\"flex items-center text-blue-600 hover:text-blue-800 transition-colors\"\n                    >\n                      <i className=\"fas fa-phone mr-3\"></i>\n                      (866) 350-9407\n                    </a>\n                    <a\n                      href=\"mailto:info@santoscsolutions.com\"\n                      className=\"flex items-center text-blue-600 hover:text-blue-800 transition-colors\"\n                    >\n                      <i className=\"fas fa-envelope mr-3\"></i>\n                      info@santoscsolutions.com\n                    </a>\n                  </div>\n                  <p className=\"text-sm text-blue-600 mt-4\">\n                    Call us for immediate assistance or questions about our services.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </main>\n      \n      <Footer currentLanguage={currentLanguage} />\n    </div>\n  );\n};\n\nexport default BookingPage;"],"names":["api","axios","create","baseURL","timeout","headers","interceptors","response","use","error","_error$response","_error$config","_error$response2","_error$response3","console","status","config","url","message","code","Promise","reject","apiService","healthCheck","get","data","submitContact","contactData","post","getReviews","reviews","getServices","createBooking","bookingData","addReview","reviewData","getLeads","arguments","length","undefined","limit","offset","updateLead","leadId","updates","put","deleteLead","delete","cleanupDemoLeads","BookingPage","navigate","useNavigate","currentLanguage","setCurrentLanguage","useState","t","useTranslations","services","setServices","isLoading","setIsLoading","formData","setFormData","customer_name","email","phone","service_type","preferred_date","preferred_time","address","special_instructions","errors","setErrors","isSubmitted","setIsSubmitted","useEffect","async","DEFAULT_SERVICES","loadServices","handleInputChange","e","name","value","target","cleaned","replace","formatted","prev","selectedService","find","s","id","_jsxs","className","children","_jsx","Header","onLanguageChange","motion","div","initial","opacity","y","animate","transition","duration","onSubmit","preventDefault","validateForm","newErrors","trim","VALIDATION_PATTERNS","test","ERROR_MESSAGES","required","Object","keys","success","toast","window","gtag","setTimeout","type","onChange","placeholder","map","service","base_price","basePrice","min","Date","toISOString","split","rows","disabled","onClick","x","description","duration_hours","includes","item","index","href","Footer"],"sourceRoot":""}