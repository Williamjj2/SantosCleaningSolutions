{"version":3,"file":"static/js/680.c01b4147.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","services/api.js","components/ContactSection.js","pages/ContactPage.js","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { motion } from 'framer-motion';\n\nconst Breadcrumbs = ({ currentLanguage }) => {\n  const location = useLocation();\n  const pathSegments = location.pathname.split('/').filter(segment => segment);\n\n  const getBreadcrumbLabel = (segment) => {\n    const labels = {\n      'areas': 'Service Areas',\n      'marietta': 'Marietta',\n      'alpharetta': 'Alpharetta',\n      'atlanta': 'Atlanta',\n      'buckhead': 'Buckhead',\n      'dunwoody': 'Dunwoody',\n      'johns-creek': 'Johns Creek',\n      'roswell': 'Roswell',\n      'sandy-springs': 'Sandy Springs',\n      'services': 'Services',\n      'about': 'About Us',\n      'contact': 'Contact'\n    };\n    return labels[segment] || segment;\n  };\n\n  const breadcrumbs = [\n    { label: 'Home', href: '/' }\n  ];\n\n  let currentPath = '';\n  pathSegments.forEach((segment, index) => {\n    currentPath += `/${segment}`;\n    breadcrumbs.push({\n      label: getBreadcrumbLabel(segment),\n      href: currentPath\n    });\n  });\n\n  if (breadcrumbs.length <= 1) return null;\n\n  return (\n    <motion.nav\n      initial={{ opacity: 0, y: -10 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-gray-50 border-b border-gray-200 py-3\"\n      aria-label=\"Breadcrumb\"\n    >\n      <div className=\"container mx-auto px-4\">\n        <ol className=\"flex items-center space-x-2 text-sm\">\n          {breadcrumbs.map((breadcrumb, index) => (\n            <li key={index} className=\"flex items-center\">\n              {index > 0 && (\n                <svg\n                  className=\"w-4 h-4 text-gray-400 mx-2\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              )}\n              {index === breadcrumbs.length - 1 ? (\n                <span className=\"text-gray-900 font-medium\" aria-current=\"page\">\n                  {breadcrumb.label}\n                </span>\n              ) : (\n                <Link\n                  to={breadcrumb.href}\n                  className=\"text-blue-600 hover:text-blue-800 transition-colors duration-200\"\n                >\n                  {breadcrumb.label}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ol>\n      </div>\n    </motion.nav>\n  );\n};\n\nexport default Breadcrumbs; ","import axios from 'axios';\n\n// Em produção, usar URL relativa (mesmo domínio)\n// Em desenvolvimento, usar localhost\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? '' // URL relativa em produção\n  : (process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001');\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging (only in development)\nif (process.env.NODE_ENV === 'development') {\n  api.interceptors.request.use(\n    (config) => {\n      console.log('API Request:', config.method?.toUpperCase(), config.url);\n      return config;\n    },\n    (error) => {\n      console.error('API Request Error:', error);\n      return Promise.reject(error);\n    }\n  );\n}\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    if (process.env.NODE_ENV === 'development') {\n      console.log('API Response:', response.status, response.config.url);\n    }\n    return response;\n  },\n  (error) => {\n    console.error('API Response Error:', error.response?.status, error.config?.url, error.message);\n    \n    // Handle common errors\n    if (error.response?.status === 404) {\n      console.error('API endpoint not found');\n    } else if (error.response?.status >= 500) {\n      console.error('Server error');\n    } else if (error.code === 'ECONNABORTED') {\n      console.error('Request timeout');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API functions\nexport const apiService = {\n  // Health check\n  async healthCheck() {\n    try {\n      const response = await api.get('/api/health');\n      return response.data;\n    } catch (error) {\n      console.error('Health check failed:', error);\n      throw error;\n    }\n  },\n\n  // Contact form submission\n  async submitContact(contactData) {\n    try {\n      const response = await api.post('/api/contact', contactData);\n      return response.data;\n    } catch (error) {\n      console.error('Contact submission failed:', error);\n      throw error;\n    }\n  },\n\n  // Get reviews\n  async getReviews() {\n    try {\n      const response = await api.get('/api/reviews');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch reviews:', error);\n      // Return empty reviews on error - NO MORE FAKE REVIEWS\n      return {\n        reviews: []\n      };\n    }\n  },\n\n  // Get services\n  async getServices() {\n    try {\n      const response = await api.get('/api/services');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch services:', error);\n      throw error;\n    }\n  },\n\n  // Create booking\n  async createBooking(bookingData) {\n    try {\n      const response = await api.post('/api/bookings', bookingData);\n      return response.data;\n    } catch (error) {\n      console.error('Booking creation failed:', error);\n      throw error;\n    }\n  },\n\n  // Add review\n  async addReview(reviewData) {\n    try {\n      const response = await api.post('/api/reviews', reviewData);\n      return response.data;\n    } catch (error) {\n      console.error('Review submission failed:', error);\n      throw error;\n    }\n  },\n\n  // Lead management\n  async getLeads(status = null, limit = 50, offset = 0) {\n    try {\n      let url = `/api/leads?limit=${limit}&offset=${offset}`;\n      if (status) {\n        url += `&status=${status}`;\n      }\n      const response = await api.get(url);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching leads:', error);\n      throw error;\n    }\n  },\n\n  async updateLead(leadId, updates) {\n    try {\n      const response = await api.put(`/api/leads/${leadId}`, updates);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating lead:', error);\n      throw error;\n    }\n  },\n\n  async deleteLead(leadId) {\n    try {\n      const response = await api.delete(`/api/leads/${leadId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting lead:', error);\n      throw error;\n    }\n  },\n\n  async cleanupDemoLeads() {\n    try {\n      const response = await api.delete('/api/leads/cleanup/demo');\n      return response.data;\n    } catch (error) {\n      console.error('Error cleaning up demo leads:', error);\n      throw error;\n    }\n  }\n};\n\nexport default api;","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\nimport toast from 'react-hot-toast';\nimport { useTranslations } from '../utils/translations';\nimport { VALIDATION_PATTERNS, ERROR_MESSAGES } from '../utils/constants';\nimport { apiService } from '../services/api';\n\nconst ContactSection = ({ currentLanguage, preFilledEstimate }) => {\n  const { t } = useTranslations(currentLanguage);\n  const [ref, inView] = useInView({\n    threshold: 0.1,\n    triggerOnce: true\n  });\n\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: '',\n    sms_consent: false\n  });\n\n  const [errors, setErrors] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Update message when preFilledEstimate changes\n  React.useEffect(() => {\n    if (preFilledEstimate && preFilledEstimate.message) {\n      setFormData(prev => ({\n        ...prev,\n        message: preFilledEstimate.message\n      }));\n    }\n  }, [preFilledEstimate]);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = ERROR_MESSAGES.required;\n    } else if (!VALIDATION_PATTERNS.name.test(formData.name)) {\n      newErrors.name = ERROR_MESSAGES.name;\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = ERROR_MESSAGES.required;\n    } else if (!VALIDATION_PATTERNS.phone.test(formData.phone.replace(/\\D/g, ''))) {\n      newErrors.phone = ERROR_MESSAGES.phone;\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = ERROR_MESSAGES.required;\n    } else if (!VALIDATION_PATTERNS.email.test(formData.email)) {\n      newErrors.email = ERROR_MESSAGES.email;\n    }\n\n    if (!formData.sms_consent) {\n      newErrors.sms_consent = 'SMS consent is required to proceed';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      toast.error('Por favor, corrija os erros no formulário');\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const response = await apiService.submitContact({\n        ...formData,\n        language: currentLanguage,\n        source: 'santos_website_lp'\n      });\n\n      if (response.success) {\n        toast.success(t('form-success'));\n        \n        // Track conversion\n        if (window.gtag) {\n          window.gtag('event', 'form_submit', {\n            'form_type': 'contact_lead',\n            'language': currentLanguage,\n            'source': 'landing_page'\n          });\n        }\n        \n        // Reset form\n        setFormData({\n          name: '',\n          phone: '',\n          email: '',\n          message: '',\n          sms_consent: false\n        });\n        setErrors({});\n      }\n    } catch (error) {\n      console.error('Contact submission error:', error);\n      toast.error('Erro ao enviar formulário. Tente novamente ou ligue diretamente.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    \n    if (name === 'phone') {\n      // Format phone number\n      const cleaned = value.replace(/\\D/g, '');\n      let formatted = cleaned;\n      if (cleaned.length >= 6) {\n        formatted = cleaned.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3');\n      } else if (cleaned.length >= 3) {\n        formatted = cleaned.replace(/(\\d{3})(\\d{3})/, '($1) $2-');\n      }\n      setFormData(prev => ({ ...prev, [name]: formatted }));\n    } else {\n      setFormData(prev => ({ \n        ...prev, \n        [name]: type === 'checkbox' ? checked : value \n      }));\n    }\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        duration: 0.8,\n        staggerChildren: 0.2\n      }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 30 },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.6, ease: [0.4, 0, 0.2, 1] }\n    }\n  };\n\n  return (\n    <section \n      id=\"contact\" \n      ref={ref}\n      className=\"py-20 relative overflow-hidden\"\n      style={{\n        background: `linear-gradient(rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.9)), url('https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=1920&h=1080&fit=crop&crop=center')`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundAttachment: 'fixed'\n      }}\n      aria-labelledby=\"contact-heading\"\n    >\n      <div className=\"container mx-auto px-4 relative z-10\">\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate={inView ? \"visible\" : \"hidden\"}\n        >\n          {/* Section Header */}\n          <motion.div variants={itemVariants} className=\"text-center mb-16\">\n                          <h2 id=\"contact-heading\" className=\"text-4xl md:text-5xl font-display font-bold text-gray-800 mb-6\">\n                {t('contact-title')}\n              </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-6\">\n              {t('contact-subtitle')}\n            </p>\n            <div className=\"w-24 h-1 bg-gradient-to-r from-blue-400 to-blue-600 mx-auto rounded-full\"></div>\n            \n            {/* Urgency Indicator */}\n            <div className=\"mt-8 inline-flex items-center space-x-2 bg-green-50 text-green-700 px-6 py-3 rounded-full border border-green-200\">\n              <i className=\"fas fa-clock animate-pulse\"></i>\n              <span className=\"font-semibold\">{t('contact-urgency-indicator')}</span>\n            </div>\n          </motion.div>\n\n          <div className=\"grid lg:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n            {/* Contact Form */}\n            <motion.div variants={itemVariants} className=\"lg:col-span-2\">\n              <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-2xl font-bold text-gray-800\">\n                    {t('form-title')}\n                  </h3>\n                  <div className=\"flex items-center space-x-2 text-green-600\">\n                    <i className=\"fas fa-shield-alt\"></i>\n                    <span className=\"text-sm font-medium\">{t('contact-secure-badge')}</span>\n                  </div>\n                </div>\n\n                <form onSubmit={handleSubmit} className=\"space-y-6\" aria-labelledby=\"contact-heading\">\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    <div>\n                      <label htmlFor=\"name\" className=\"form-label\">\n                        <i className=\"fas fa-user mr-2\" aria-hidden=\"true\"></i>\n                        {t('form-name')} *\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        id=\"name\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        className={`form-input ${errors.name ? 'border-red-500 focus:border-red-500' : 'focus:border-blue-500'}`}\n                        placeholder={t('form-name') === 'Full Name' ? 'Your full name' : \n                                 t('form-name') === 'Nombre Completo' ? 'Su nombre completo' : \n                                 'Seu nome completo'}\n                        aria-describedby={errors.name ? 'name-error' : undefined}\n                        aria-invalid={errors.name ? 'true' : 'false'}\n                        required\n                      />\n                      {errors.name && (\n                        <p id=\"name-error\" className=\"text-red-500 text-sm mt-1 flex items-center\" role=\"alert\">\n                          <i className=\"fas fa-exclamation-circle mr-1\" aria-hidden=\"true\"></i>\n                          {errors.name}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"form-label\">\n                        <i className=\"fas fa-phone mr-2\"></i>\n                        {t('form-phone')} *\n                      </label>\n                      <input\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={formData.phone}\n                        onChange={handleInputChange}\n                        className={`form-input ${errors.phone ? 'border-red-500 focus:border-red-500' : 'focus:border-blue-500'}`}\n                        placeholder=\"(XXX) XXX-XXXX\"\n                      />\n                      {errors.phone && (\n                        <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                          <i className=\"fas fa-exclamation-circle mr-1\"></i>\n                          {errors.phone}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div>\n                    <label className=\"form-label\">\n                      <i className=\"fas fa-envelope mr-2\"></i>\n                      {t('form-email')} *\n                    </label>\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      className={`form-input ${errors.email ? 'border-red-500 focus:border-red-500' : 'focus:border-blue-500'}`}\n                      placeholder={currentLanguage === 'en' ? 'your@email.com' : \n                                 currentLanguage === 'es' ? 'su@email.com' : \n                                 'seu@email.com'}\n                    />\n                    {errors.email && (\n                      <p className=\"text-red-500 text-sm mt-1 flex items-center\">\n                        <i className=\"fas fa-exclamation-circle mr-1\"></i>\n                        {errors.email}\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"form-label\">\n                      <i className=\"fas fa-comment mr-2\"></i>\n                      {t('form-message')}\n                    </label>\n                    <textarea\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      rows=\"4\"\n                      className=\"form-input form-textarea focus:border-blue-500\"\n                      placeholder={t('form-placeholder')}\n                    />\n                  </div>\n\n                  {/* SMS Consent */}\n                  <div className=\"bg-blue-50 rounded-xl p-6 border-2 border-blue-200\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center\">\n                        <i className=\"fas fa-mobile-alt text-white\"></i>\n                      </div>\n                      <h4 className=\"text-lg font-bold text-gray-800\">\n                        {t('sms-consent-title')}\n                      </h4>\n                    </div>\n\n                    <label className=\"flex items-start space-x-3 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        name=\"sms_consent\"\n                        checked={formData.sms_consent}\n                        onChange={handleInputChange}\n                        className=\"mt-1 w-5 h-5 text-blue-600 border-2 border-gray-300 rounded focus:ring-blue-500\"\n                      />\n                      <div className=\"text-sm text-gray-700\">\n                        <strong className=\"text-blue-800\">\n                          {t('sms-consent-text')}\n                        </strong>\n                        <span> {t('sms-consent-details')}</span>\n                        <ul className=\"list-disc list-inside mt-2 space-y-1 text-xs\">\n                          <li>{t('sms-item-1')}</li>\n                          <li>{t('sms-item-2')}</li>\n                          <li>{t('sms-item-3')}</li>\n                          <li>{t('sms-item-4')}</li>\n                        </ul>\n                        <div className=\"mt-3 text-xs text-gray-600\">\n                          <p><strong>{currentLanguage === 'en' ? 'Frequency:' : currentLanguage === 'es' ? 'Frecuencia:' : 'Frequência:'}</strong> {t('sms-freq-text')}</p>\n                          <p>{t('sms-rates-text')}</p>\n                        </div>\n                      </div>\n                    </label>\n                    {errors.sms_consent && (\n                      <p className=\"text-red-500 text-sm mt-2 flex items-center\">\n                        <i className=\"fas fa-exclamation-circle mr-1\"></i>\n                        {errors.sms_consent}\n                      </p>\n                    )}\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"w-full bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white px-8 py-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed shadow-lg hover:shadow-xl\"\n                  >\n                    {isLoading ? (\n                      <span className=\"flex items-center justify-center\">\n                        <div className=\"loading-spinner mr-2\"></div>\n                        {t('contact-form-processing')}\n                      </span>\n                    ) : (\n                      <span className=\"flex items-center justify-center\">\n                        <i className=\"fas fa-paper-plane mr-2\"></i>\n                        {t('form-submit')}\n                      </span>\n                    )}\n                  </button>\n                </form>\n\n                <p className=\"text-xs text-gray-600 mt-4 text-center\">\n                  {t('contact-form-terms')}\n                </p>\n              </div>\n            </motion.div>\n\n            {/* Contact Info Sidebar */}\n            <motion.div variants={itemVariants} className=\"space-y-6\">\n              {/* Contact Information */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6\">\n                <h3 className=\"text-xl font-bold text-gray-800 mb-6 flex items-center\">\n                  <i className=\"fas fa-info-circle text-blue-500 mr-2\"></i>\n                  {t('contact-info-title')}\n                </h3>\n\n                <div className=\"space-y-4\">\n                  <a\n                    href=\"tel:+18663509407\"\n                    className=\"flex items-center space-x-4 p-3 rounded-lg hover:bg-blue-50 transition-colors group\"\n                  >\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform\">\n                      <i className=\"fas fa-phone text-white\"></i>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">{t('contact-info-phone')}</p>\n                      <p className=\"font-bold text-gray-800 text-lg\">(866) 350-9407</p>\n                      <p className=\"text-xs text-green-600\">{t('contact-info-call-now')}</p>\n                    </div>\n                  </a>\n\n                  <div className=\"flex items-center space-x-4 p-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center\">\n                      <i className=\"fas fa-map-marker-alt text-white\"></i>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">{t('contact-info-location')}</p>\n                      <p className=\"font-bold text-gray-800\">Marietta, GA</p>\n                      <p className=\"text-xs text-blue-600\">{t('contact-service-area')}</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-4 p-3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-full flex items-center justify-center\">\n                      <i className=\"fas fa-clock text-white\"></i>\n                    </div>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">{t('contact-info-hours')}</p>\n                      <p className=\"font-bold text-gray-800\">{t('contact-hours-time')}</p>\n                      <p className=\"text-xs text-purple-600\">{t('contact-emergency')}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Call CTA */}\n              <div className=\"bg-gradient-to-br from-green-500 to-green-600 rounded-2xl p-6 text-white text-center\">\n                <i className=\"fas fa-phone-alt text-3xl mb-4 animate-pulse\"></i>\n                <h3 className=\"text-xl font-bold mb-2\">{t('contact-quick-call-title')}</h3>\n                <p className=\"text-green-100 mb-4 text-sm\">\n                  {t('contact-quick-call-subtitle')}\n                </p>\n                <a\n                  href=\"tel:+18663509407\"\n                  className=\"bg-white text-green-600 hover:bg-green-50 px-6 py-3 rounded-lg font-bold transition-all duration-300 transform hover:scale-105 inline-flex items-center space-x-2 shadow-lg\"\n                >\n                  <i className=\"fas fa-phone\"></i>\n                  <span>(866) 350-9407</span>\n                </a>\n              </div>\n\n              {/* Service Areas */}\n              <div className=\"bg-blue-50 rounded-2xl p-6 border border-blue-200\">\n                <h3 className=\"text-lg font-bold text-blue-800 mb-4\">\n                  <i className=\"fas fa-map-marker-alt mr-2\"></i>\n                  {t('contact-premium-areas-title')}\n                </h3>\n                <div className=\"grid grid-cols-2 gap-2 text-sm mb-4\">\n                  {[\n                    'Buckhead', 'Marietta', 'Roswell', 'Alpharetta',\n                    'Sandy Springs', 'Vinings', 'East Cobb', 'Dunwoody'\n                  ].map((area, index) => (\n                    <div key={index} className=\"text-blue-700 flex items-center space-x-1\">\n                      <i className=\"fas fa-map-pin text-blue-500 text-xs\"></i>\n                      <span className=\"font-medium\">{area}</span>\n                    </div>\n                  ))}\n                </div>\n                <p className=\"text-xs text-blue-600\">\n                  {t('contact-other-areas')}\n                </p>\n              </div>\n            </motion.div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default ContactSection;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useTranslations } from '../utils/translations';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Breadcrumbs from '../components/Breadcrumbs';\nimport ContactSection from '../components/ContactSection';\n\nconst ContactPage = ({ currentLanguage, onLanguageChange }) => {\n  const { t } = useTranslations(currentLanguage);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        currentLanguage={currentLanguage}\n        onLanguageChange={onLanguageChange}\n      />\n      \n      <Breadcrumbs currentLanguage={currentLanguage} />\n      \n      <main>\n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white py-20\">\n          <div className=\"container mx-auto px-4\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              className=\"max-w-4xl mx-auto text-center\"\n            >\n              <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">\n                Contact Us\n              </h1>\n              <p className=\"text-xl md:text-2xl text-blue-100 mb-8\">\n                Get your free estimate today\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Contact Information */}\n        <section className=\"py-16\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-6xl mx-auto\">\n              <div className=\"grid lg:grid-cols-2 gap-12\">\n                {/* Contact Form */}\n                <motion.div\n                  initial={{ opacity: 0, x: -30 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.8 }}\n                >\n                  <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n                    Get Your Free Estimate\n                  </h2>\n                  <p className=\"text-lg text-gray-600 mb-8\">\n                    Fill out the form below and we'll get back to you within 24 hours \n                    with a personalized quote for your cleaning needs.\n                  </p>\n                  \n                  <ContactSection \n                    currentLanguage={currentLanguage}\n                    preFilledEstimate={null}\n                  />\n                </motion.div>\n\n                {/* Contact Information */}\n                <motion.div\n                  initial={{ opacity: 0, x: 30 }}\n                  whileInView={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.8 }}\n                  className=\"space-y-8\"\n                >\n                  <div>\n                    <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n                      Get in Touch\n                    </h2>\n                    <p className=\"text-lg text-gray-600 mb-8\">\n                      We're here to help with all your cleaning needs. Contact us \n                      through any of the methods below.\n                    </p>\n                  </div>\n\n                  {/* Contact Methods */}\n                  <div className=\"space-y-6\">\n                    <div className=\"flex items-start\">\n                      <div className=\"text-2xl text-blue-600 mr-4 mt-1\">\n                        <i className=\"fas fa-phone\"></i>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-bold text-gray-900 mb-2\">\n                          Phone\n                        </h3>\n                        <p className=\"text-gray-600 mb-2\">\n                          Call us directly for immediate assistance\n                        </p>\n                        <a \n                          href=\"tel:+18663509407\"\n                          className=\"text-blue-600 hover:text-blue-800 font-semibold text-lg\"\n                        >\n                          (866) 350-9407\n                        </a>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start\">\n                      <div className=\"text-2xl text-blue-600 mr-4 mt-1\">\n                        <i className=\"fas fa-envelope\"></i>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-bold text-gray-900 mb-2\">\n                          Email\n                        </h3>\n                        <p className=\"text-gray-600 mb-2\">\n                          Send us a message anytime\n                        </p>\n                        <a \n                          href=\"mailto:info@santoscsolutions.com\"\n                          className=\"text-blue-600 hover:text-blue-800 font-semibold\"\n                        >\n                          info@santoscsolutions.com\n                        </a>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start\">\n                      <div className=\"text-2xl text-blue-600 mr-4 mt-1\">\n                        <i className=\"fas fa-map-marker-alt\"></i>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-bold text-gray-900 mb-2\">\n                          Service Area\n                        </h3>\n                        <p className=\"text-gray-600 mb-2\">\n                          We serve the Greater Atlanta area\n                        </p>\n                        <p className=\"text-gray-900 font-semibold\">\n                          Marietta, Atlanta, Buckhead, Sandy Springs,<br />\n                          Alpharetta, Roswell, Dunwoody, Johns Creek\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start\">\n                      <div className=\"text-2xl text-blue-600 mr-4 mt-1\">\n                        <i className=\"fas fa-clock\"></i>\n                      </div>\n                      <div>\n                        <h3 className=\"text-lg font-bold text-gray-900 mb-2\">\n                          Business Hours\n                        </h3>\n                        <p className=\"text-gray-600 mb-2\">\n                          We're available to serve you\n                        </p>\n                        <p className=\"text-gray-900 font-semibold\">\n                          Monday - Saturday: 8:00 AM - 6:00 PM<br />\n                          Sunday: By appointment only\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Why Choose Us */}\n                  <div className=\"bg-blue-50 rounded-lg p-6\">\n                    <h3 className=\"text-xl font-bold text-gray-900 mb-4\">\n                      Why Choose Santos Cleaning?\n                    </h3>\n                    <ul className=\"space-y-3\">\n                      <li className=\"flex items-start\">\n                        <i className=\"fas fa-check-circle text-green-500 mt-1 mr-3\"></i>\n                        <span className=\"text-gray-700\">Free estimates and consultations</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <i className=\"fas fa-check-circle text-green-500 mt-1 mr-3\"></i>\n                        <span className=\"text-gray-700\">Licensed and fully insured</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <i className=\"fas fa-check-circle text-green-500 mt-1 mr-3\"></i>\n                        <span className=\"text-gray-700\">Eco-friendly cleaning products</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <i className=\"fas fa-check-circle text-green-500 mt-1 mr-3\"></i>\n                        <span className=\"text-gray-700\">Satisfaction guaranteed</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <i className=\"fas fa-check-circle text-green-500 mt-1 mr-3\"></i>\n                        <span className=\"text-gray-700\">Flexible scheduling options</span>\n                      </li>\n                    </ul>\n                  </div>\n                </motion.div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* FAQ Section */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"max-w-4xl mx-auto\">\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8 }}\n                className=\"text-center mb-12\"\n              >\n                <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n                  Frequently Asked Questions\n                </h2>\n                <p className=\"text-lg text-gray-600\">\n                  Get answers to common questions about our services\n                </p>\n              </motion.div>\n\n              <div className=\"space-y-6\">\n                {[\n                  {\n                    question: 'How much do your cleaning services cost?',\n                    answer: 'Our prices vary based on the size of your home, type of service, and frequency. We offer free estimates to provide you with an accurate quote tailored to your specific needs.'\n                  },\n                  {\n                    question: 'How far in advance should I book?',\n                    answer: 'We recommend booking at least 1-2 weeks in advance for regular cleaning services. For deep cleaning or move-in/move-out services, 2-3 weeks notice is preferred.'\n                  },\n                  {\n                    question: 'Do you bring your own cleaning supplies?',\n                    answer: 'Yes, we provide all cleaning supplies and equipment. We use eco-friendly, non-toxic products that are safe for your family and pets.'\n                  },\n                  {\n                    question: 'What if I\\'m not satisfied with the cleaning?',\n                    answer: 'We offer a 100% satisfaction guarantee. If you\\'re not completely satisfied with our work, we\\'ll come back and fix it at no additional cost.'\n                  },\n                  {\n                    question: 'Are you licensed and insured?',\n                    answer: 'Yes, we are fully licensed and insured. This provides you with complete peace of mind knowing that your home and our team are protected.'\n                  }\n                ].map((faq, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.8, delay: index * 0.1 }}\n                    className=\"bg-gray-50 rounded-lg p-6\"\n                  >\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-3\">\n                      {faq.question}\n                    </h3>\n                    <p className=\"text-gray-600\">\n                      {faq.answer}\n                    </p>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n\n      <Footer currentLanguage={currentLanguage} />\n    </div>\n  );\n};\n\nexport default ContactPage; ","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>(onChange);\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element | undefined>(undefined);\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","currentLanguage","pathSegments","useLocation","pathname","split","filter","segment","getBreadcrumbLabel","breadcrumbs","label","href","currentPath","forEach","index","push","length","_jsx","motion","nav","initial","opacity","y","animate","className","children","map","breadcrumb","_jsxs","fill","viewBox","fillRule","d","clipRule","Link","to","api","axios","create","baseURL","timeout","headers","interceptors","response","use","error","_error$response","_error$config","_error$response2","_error$response3","console","status","config","url","message","code","Promise","reject","apiService","healthCheck","get","data","submitContact","contactData","post","getReviews","reviews","getServices","createBooking","bookingData","addReview","reviewData","getLeads","arguments","undefined","limit","offset","updateLead","leadId","updates","put","deleteLead","delete","cleanupDemoLeads","preFilledEstimate","t","useTranslations","ref","inView","useInView","threshold","triggerOnce","formData","setFormData","useState","name","phone","email","sms_consent","errors","setErrors","isLoading","setIsLoading","React","prev","handleInputChange","e","value","type","checked","target","cleaned","replace","formatted","itemVariants","hidden","visible","transition","duration","ease","id","style","background","backgroundSize","backgroundPosition","backgroundAttachment","div","variants","staggerChildren","onSubmit","async","preventDefault","validateForm","newErrors","trim","VALIDATION_PATTERNS","test","ERROR_MESSAGES","required","Object","keys","language","source","success","toast","window","gtag","htmlFor","onChange","placeholder","role","rows","disabled","area","onLanguageChange","Header","Breadcrumbs","x","whileInView","ContactSection","question","answer","faq","delay","Footer","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","sort","key","root","has","set","toString","observe","element","callback","fallbackInView","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","splice","indexOf","unobserve","size","disconnect","rootMargin","skip","initialInView","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}